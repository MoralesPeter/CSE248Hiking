package controller;

import java.awt.Desktop;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.net.URL;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;

import app.Main;
import javafx.event.ActionEvent;
import javafx.event.EventHandler;
import javafx.fxml.FXML;
import javafx.fxml.FXMLLoader;
import javafx.scene.Parent;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.image.Image;
import javafx.scene.image.ImageView;
import javafx.scene.input.MouseButton;
import javafx.scene.input.MouseEvent;
import javafx.scene.layout.BorderPane;
import javafx.scene.layout.TilePane;
import javafx.scene.paint.Color;
import javafx.stage.FileChooser;
import javafx.stage.Stage;
import model.HikedTrail;

public class HikingPicturesController {
	
	private HikedTrail hikedTrail;
	private Stage stage;
	private Desktop desktop = Desktop.getDesktop();
	
    @FXML
    private TilePane tpImages;
    
    @FXML
    private Button btnBack;
    
    public void initialize() {
    	hikedTrail = Main.selectedHike;
    	List<File> list = hikedTrail.getImages();
    	for (final File file : list) {
            ImageView imageView;
            imageView = createImageView(file);
            tpImages.getChildren().addAll(imageView);
    	}
    }
    
    public void openHistoryView(ActionEvent e) {
    	//close hiking pictures window, open history view window
    	Stage primaryStage = (Stage)btnBack.getScene().getWindow();
    	
    	try {
    		URL url = getClass().getClassLoader().getResource("view/HistoryView.fxml");
    		Parent root = FXMLLoader.load(url);
    		Scene scene = new Scene(root);
    		Stage stage = new Stage();
    		stage.setTitle("ViewHistory");
    		stage.setScene(scene);
    		stage.show();
    	    primaryStage.close();

    	} catch (IOException ex) {
    	    ex.printStackTrace();
    	}
    }
    
    private ImageView createImageView(final File imageFile) {
        ImageView imageView = null;
        try {
            final Image image = new Image(new FileInputStream(imageFile), 150, 0, true,
                    true);
            imageView = new ImageView(image);
            imageView.setFitWidth(150);
            imageView.setOnMouseClicked(new EventHandler<MouseEvent>() {

                @Override
                public void handle(MouseEvent mouseEvent) {

                    if(mouseEvent.getButton().equals(MouseButton.PRIMARY)){

                        if(mouseEvent.getClickCount() == 2){
                        	openFile(imageFile);
                        	/* try {
                                
                            	BorderPane borderPane = new BorderPane();
                                ImageView imageView = new ImageView();
                                Image image = new Image(new FileInputStream(imageFile));
                                imageView.setImage(image);
                                imageView.setStyle("-fx-background-color: BLACK");
                                imageView.setFitHeight(stage.getHeight() - 10);
                                imageView.setPreserveRatio(true);
                                imageView.setSmooth(true);
                                imageView.setCache(true);
                                borderPane.setCenter(imageView);
                                borderPane.setStyle("-fx-background-color: BLACK");
                                Stage newStage = new Stage();
                                newStage.setWidth(stage.getWidth());
                                newStage.setHeight(stage.getHeight());
                                newStage.setTitle(imageFile.getName());
                                Scene scene = new Scene(borderPane,Color.BLACK);
                                newStage.setScene(scene);
                                newStage.show();
                            } catch (FileNotFoundException e) {
                                e.printStackTrace();
                            }*/

                        }
                    }
                }
            });
        } catch (FileNotFoundException ex) {
            ex.printStackTrace();
        }
        return imageView;
    }
    
    private void openFile(File file) {
        try {
            desktop.open(file);
        } catch (IOException ex) {
            Logger.getLogger(
                FileChooser.class.getName()).log(
                    Level.SEVERE, null, ex
                );
        }
    }
}
